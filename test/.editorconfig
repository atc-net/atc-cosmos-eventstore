# ATC coding rules - https://github.com/atc-net/atc-coding-rules
# Version: 1.0.3
# Updated: 20-12-2020
# Location: Test
# Inspired by: https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options

##########################################
# Code Analyzers Rules
##########################################
[*.{cs,csx,cake}]

# AsyncFixer
# http://www.asyncfixer.com


# Asyncify
# https://github.com/hvanbakel/Asyncify-CSharp


# Meziantou
# https://www.meziantou.net/enforcing-asynchronous-code-good-practices-using-a-roslyn-analyzer.htm


# Microsoft - Code Analysis
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
dotnet_diagnostic.CA1707.severity = none            # https://github.com/atc-net/atc-coding-rules/blob/main/documentation/CodeAnalyzersRules/MicrosoftCodeAnalysis/CA1707.md


# Microsoft - Threading
# https://github.com/microsoft/vs-threading/blob/master/doc/analyzers/index.md


# SecurityCodeScan
# https://security-code-scan.github.io/


# StyleCop
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers
dotnet_diagnostic.SA1133.severity = none            # https://github.com/atc-net/atc-coding-rules/blob/main/documentation/CodeAnalyzersRules/StyleCop/SA1133.md


# SonarAnalyzer.CSharp
# https://rules.sonarsource.com/csharp


##########################################
# Custom - Code Analyzers Rules
##########################################
dotnet_diagnostic.CA1034.severity = none            # Allow nested types
dotnet_diagnostic.SA1201.severity = none            # Allow nested types before other class members
dotnet_diagnostic.MA0006.severity = none            # Test projects needs to be able to compare stirngs with "=="
dotnet_diagnostic.CA2007.severity = none            # ConfigureAwait optimization is not necessary in tests
dotnet_diagnostic.CA2012.severity = none            # ValueTask instances returned from method calls should be directly awaited, is not necessary in tests
dotnet_diagnostic.CA1062.severity = none            # Null checking input to test methods makes no sense
dotnet_diagnostic.CA1812.severity = none            # Test classes used as generic arguments but not instantiated should be allowed.
dotnet_diagnostic.SA1202.severity = none            # Private helper methods makes sense to keep at top of test classes, as tests are added to bottom.
dotnet_diagnostic.CA2201.severity = none            # Instantiating Exceptions as test data should be allowed.
dotnet_diagnostic.MA0016.severity = none            # Prefer return collection abstraction instead of implementation
dotnet_diagnostic.CA1002.severity = none            # Do not expose generic lists